# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

#    - name: application yml setting
#      uses: microsoft/variable-substitution@v1
#      with:
#        files: ./monster-factory-server/src/main/resources/application.yml
#      env:
#        spring.datasource.url: ${{ secrets.DATASOURCE_URL }}
#        spring.datasource.username: ${{ secrets.DATASOURCE_USERNAME }}
#        spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }}
#        jwt.secret: ${{ secrets.JWT_SECRET }}

    - name: Build with Maven
      run: mvn -B package --file monster-factory-server/pom.xml

    # docker 빌드 & push 설정
    - name: docker settings
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/monsterfac-back ./
        docker push ${{ secrets.DOCKER_USERNAME }}/monsterfac-back
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: beanstalk deploy
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: profeel-env
        environment_name: Profeelenv-env
        region: ap-northeast-2
        version_label: profeel-env--${{ steps.current-time.outputs.replaced }}
        deployment_package: Dockerrun.aws.json

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
     # uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
